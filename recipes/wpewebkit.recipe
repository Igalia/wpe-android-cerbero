# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python

class Recipe(recipe.Recipe):
    name = 'wpewebkit'
    version = '2.48.5'
    stype = SourceType.TARBALL
    btype = BuildType.CMAKE
    url = 'https://wpewebkit.org/releases/wpewebkit-{0}.tar.xz'.format(version)
    tarball_checksum = '01f36010705adb14404c56baf033147f7927cc7c6badec81bb141266fcdd8d0b'
    deps = [
        'icu',
        'cairo',
        'freetype',
        'gettext',
        'gstreamer-1.0',
        'gst-plugins-base-1.0',
        'gst-plugins-good-1.0',
        'gst-plugins-bad-1.0',
        'harfbuzz',
        'libepoxy',
        'libgcrypt',
        'libjpeg-turbo',
        'libpng',
        'libsoup',
        'libtasn1',
        'libxslt',
        'libwebp',
        'libwpe',
        'openjpeg',
    ]
    # TODO: support accessibility woff2
    configure_options = '\
        -DPORT=WPE \
        -DUSE_GSTREAMER_GL=ON \
        -DUSE_WOFF2=OFF \
        -DENABLE_DOCUMENTATION=OFF \
        -DENABLE_INTROSPECTION=OFF \
        -DENABLE_JOURNALD_LOG=OFF \
        -DENABLE_BUBBLEWRAP_SANDBOX=OFF \
        -DENABLE_SPEECH_SYNTHESIS=OFF \
        -DUSE_ATK=OFF \
        -DUSE_LCMS=OFF \
        -DUSE_AVIF=OFF \
        -DUSE_GBM=OFF \
        -DUSE_LIBDRM=OFF \
        -DUSE_JPEGXL=OFF \
        -DUSE_LIBBACKTRACE=OFF \
        -DUSE_SKIA_OPENTYPE_SVG=OFF \
        -DUSE_SYSPROF_CAPTURE=OFF \
        -DENABLE_WEBDRIVER=ON \
        -DENABLE_WPE_PLATFORM=OFF \
        -DCMAKE_BUILD_TYPE=Release \
    '
    cmake_generator = 'ninja'

    files_libs = [
        'libWPEWebKit-2.0',
        'libWPEWebDriver'
    ]

    files_misc = [
        'lib/wpe-webkit-2.0/injected-bundle/libWPEInjectedBundle.so'
    ]

    files_shared = [
        'share/wpe-webkit-2.0/inspector.gresource',
    ]

    files_devel = [
        'include/wpe-webkit-2.0',
        'lib/pkgconfig/wpe-webkit-2.0.pc',
        'lib/pkgconfig/wpe-web-process-extension-2.0.pc'
    ]

    files_libexec = [
        'libexec/wpe-webkit-2.0/WPENetworkProcess',
        'libexec/wpe-webkit-2.0/WPEWebProcess',
    ]

    patches = [
        'wpewebkit/0001-Revert-Use-UnixFileDescriptor-in-IPC-and-ProcessLaun.patch',
    ]

    def prepare(self):
        from os import path
        glib_compile_resources_path = \
            path.join(self.config.build_tools_prefix, 'bin', 'glib-compile-resources')
        self.configure_options += f' \
            -DICU_ROOT={self.config.prefix} \
            -DZLIB_ROOT={self.config.prefix} \
            -DFREETYPE_LIBRARY={self.config.prefix}/lib/libfreetype.so \
            -DFREETYPE_INCLUDE_DIR_ft2build={self.config.prefix}/include/freetype2 \
            -DFREETYPE_INCLUDE_DIR_freetype2={self.config.prefix}/include/freetype2 \
            -DGLIB_COMPILE_RESOURCES_EXECUTABLE={glib_compile_resources_path} \
            -DJPEG_LIBRARY={self.config.prefix}/lib/libjpeg.so \
            -DJPEG_INCLUDE_DIR={self.config.prefix}/include \
            -DPNG_LIBRARY={self.config.prefix}/lib/libpng.so \
            -DPNG_INCLUDE_DIR={self.config.prefix}/include \
            '
        if self.config.target_platform in (Platform.ANDROID):
            arch_src_name = self.config.target_arch
            if self.config.target_arch == Architecture.ARMv7:
                arch_src_name = 'arm'
            self.configure_options += ' -DCMAKE_SYSTEM_PROCESSOR=' + arch_src_name
            self.configure_options += ' -DANDROID=1'
            # Placeholder to allow enabling debug externally
            self.append_env('WEBKIT_DEBUG', '')
        else:
            self.append_env('LDFLAGS', '-lrt')
            self.configure_options += ' -DCMAKE_SYSTEM_PROCESSOR=' + self.config.target_arch
