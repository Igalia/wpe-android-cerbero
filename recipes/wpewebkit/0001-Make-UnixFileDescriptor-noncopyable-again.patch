From 51ba4d545f1bda0d4e5b06adca2f9ff1d1ed121a Mon Sep 17 00:00:00 2001
From: Michael Catanzaro <mcatanzaro@redhat.com>
Date: Thu, 17 Oct 2024 07:42:35 -0700
Subject: [PATCH 1/7] Make UnixFileDescriptor noncopyable again
 https://bugs.webkit.org/show_bug.cgi?id=281609

Reviewed by Carlos Garcia Campos.

Make UnixFileDescriptor noncopyable again. Otherwise, it's very
difficult to use the class without accidentally duping the underlying
file descriptor.

This is a partial revert of 272365@main. We can manually duplicate the
file descriptor in the SharedMemoryHandle copy constructor, since we
really do want a copy there.

This un-reverts 261281@main.

* Source/WTF/wtf/unix/UnixFileDescriptor.h:
* Source/WebCore/platform/SharedMemory.h:
* Source/WebCore/platform/unix/SharedMemoryUnix.cpp:
(WebCore::SharedMemoryHandle::SharedMemoryHandle):

Canonical link: https://commits.webkit.org/285336@main
---
 Source/WTF/wtf/unix/UnixFileDescriptor.h          | 10 ++++------
 Source/WebCore/platform/SharedMemory.h            |  4 ++++
 Source/WebCore/platform/unix/SharedMemoryUnix.cpp |  6 ++++++
 3 files changed, 14 insertions(+), 6 deletions(-)

diff --git a/Source/WTF/wtf/unix/UnixFileDescriptor.h b/Source/WTF/wtf/unix/UnixFileDescriptor.h
index ffcfeb4581b2..422159723482 100644
--- a/Source/WTF/wtf/unix/UnixFileDescriptor.h
+++ b/Source/WTF/wtf/unix/UnixFileDescriptor.h
@@ -35,6 +35,10 @@ namespace WTF {
 
 class UnixFileDescriptor {
 public:
+    // This class is noncopyable because otherwise it's very hard to avoid accidental file
+    // descriptor duplication. If you intentionally want a dup, call the duplicate method.
+    WTF_MAKE_NONCOPYABLE(UnixFileDescriptor);
+
     UnixFileDescriptor() = default;
 
     enum AdoptionTag { Adopt };
@@ -54,12 +58,6 @@ public:
         m_value = o.release();
     }
 
-    explicit UnixFileDescriptor(const UnixFileDescriptor& o)
-    {
-        if (o.m_value >= 0)
-            m_value = dupCloseOnExec(o.m_value);
-    }
-
     UnixFileDescriptor& operator=(UnixFileDescriptor&& o)
     {
         if (&o == this)
diff --git a/Source/WebCore/platform/SharedMemory.h b/Source/WebCore/platform/SharedMemory.h
index 19feabd1d6b7..f2e11f8c0a92 100644
--- a/Source/WebCore/platform/SharedMemory.h
+++ b/Source/WebCore/platform/SharedMemory.h
@@ -66,7 +66,11 @@ public:
 #endif
 
     SharedMemoryHandle(SharedMemoryHandle&&) = default;
+#if USE(UNIX_DOMAIN_SOCKETS)
+    explicit SharedMemoryHandle(const SharedMemoryHandle&);
+#else
     explicit SharedMemoryHandle(const SharedMemoryHandle&) = default;
+#endif
     WEBCORE_EXPORT SharedMemoryHandle(SharedMemoryHandle::Type&&, size_t);
 
     SharedMemoryHandle& operator=(SharedMemoryHandle&&) = default;
diff --git a/Source/WebCore/platform/unix/SharedMemoryUnix.cpp b/Source/WebCore/platform/unix/SharedMemoryUnix.cpp
index e4a63f02f3da..4d5985716a5d 100644
--- a/Source/WebCore/platform/unix/SharedMemoryUnix.cpp
+++ b/Source/WebCore/platform/unix/SharedMemoryUnix.cpp
@@ -52,6 +52,12 @@
 
 namespace WebCore {
 
+SharedMemoryHandle::SharedMemoryHandle(const SharedMemoryHandle& handle)
+{
+    m_handle = handle.m_handle.duplicate();
+    m_size = handle.m_size;
+}
+
 UnixFileDescriptor SharedMemoryHandle::releaseHandle()
 {
     return WTFMove(m_handle);
-- 
2.43.0

